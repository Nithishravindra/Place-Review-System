{"version":3,"sources":["pages/WelcomePage.js","pages/SignUpForm.js","pages/SignInForm.js","pages/RatingPage.js","pages/404.js","App.js","serviceWorker.js","index.js"],"names":["App","state","placeTitle","description","listOfPlaces","title","handleChange","bind","handleSubmit","e","this","setState","target","name","value","preventDefault","console","log","previousState","document","className","map","item","index","to","pathname","key","onSubmit","type","placeholder","onChange","defaultValue","onClick","Component","SignUpForm","email","phone","password","conpassword","fetch","then","res","json","users","componentDidMount","activeClassName","htmlFor","id","alert","excat","path","component","WelcomePage","SignInForm","checked","exact","Rating","rate1","comment","listOfComments","newComment","rating","props","location","match","params","placeName","onRate","handle","Comment","NotFoundPage","RatingPage","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2cf5abb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './WelcomePage.css';\n\nclass App extends Component {\n\t// you can initialize state outside constructor different way\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tplaceTitle: \"\",\n\t\t\tdescription: \"\",\n\t\t\t// Created a new state with list of places which you can append to \n\t\t\tlistOfPlaces: [\n\t\t\t\t{\n\t\t\t\t\ttitle: 'GandiBazaar',\n\t\t\t\t\tdescription: 'Kadle KAi Pareshe'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Jayanagar',\n\t\t\t\t\tdescription: 'As a newbie in React world, I came across a similar issues where I could not edit the textarea and struggled'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Kolar',\n\t\t\t\t\tdescription: 'My native',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Taj_mahal',\n\t\t\t\t\tdescription: 'The Taj Mahal is located on the right bank of the Yamuna River in a vast Mughal garden that encompasses nearly 17 hectares, in the Agra District in Uttar Pradesh. It was built by Mughal Emperor Shah Jahan in memory of his wife Mumtaz Mahal with construction starting in 1632 AD and completed in 1648 AD, with the mosque, the guest house and the main gateway on the south, the outer courtyard and its cloisters were added subsequently and completed in 1653 AD. The existence of several historical and Quaranic inscriptions in Arabic script have facilitated setting the chronology of Taj Mahal. For its construction, masons, stone-cutters, inlayers, carvers, painters, calligraphers, dome builders and other artisans were requisitioned from the whole of the empire and also from the Central Asia and Iran. Ustad-Ahmad Lahori was the main architect of the Taj Mahal.'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\t// you can add a name tag to html input element and access it using e.target.name\n\t\tthis.setState({\n\t\t  [e.target.name]: e.target.value\n\t\t});\n\t  }\n\t\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconsole.log('The form was submitted with the following data:');\n\t\tconsole.log(this.state);\n\n\t\t// I'm appending an object and pushing it to list\n\t\tthis.setState(previousState => ({\n\t\t\tlistOfPlaces: [...previousState.listOfPlaces, { title: this.state.placeTitle, description: this.state.description  }]\n\t\t}));\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.title = 'Welcome to PRS';\n\t}\n\n\trender() {\n\t\t// You can use state values like this also\n\t\tconst { placeTitle, description, listOfPlaces } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"Ap\">\n\t\t\t\t<div className=\"FormFieldB\">\n\t\t\t\t\t<h4>Welcome to Place Review System</h4>\n\t\t\t\t\t<h5>Places listed below can be reviewed.</h5>\n\t\t\t\t</div>\n\n\t\t\t\t{/* URL ->  navgiation to page3 */}\n\t\t\t\t<div className=\"FormFieldB\">\n\t\t\t\t   \n\t\t\t\t   {/* earlier  */}\n\t\t\t\t\t{/* <div className=\"FormTitle\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlistOfPlaces.map((item, index) => (\n\t\t\t\t\t\t\t\t<Link to={`/ratingPage/${item.title}`} key={index} className=\"FormTitle_Ln\">{item.title}</Link>\t\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</div> */}\n\n\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"FormTitle\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlistOfPlaces.map((item, index) => (\n\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\tpathname: `/ratingPage/${item.title}`,\n\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\tdescription : item.description,\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}} \t\n\t\t\t\t\t\t\t\t\tkey={index} className=\"FormTitle_Ln\">{item.title} \n\t\t\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\n\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t<h5>To add a new place in the list add title and description in below textbox and click on 'SUBMIT'</h5>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"FormFieldT\">\n\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Place Title\" value={placeTitle} name=\"placeTitle\" onChange={this.handleChange} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t \n\t\t\t\t\t\t\t<div className=\"FormFText\">\n                    \t\t\t<textarea type=\"text\" placeholder=\"Description\" defaultValue={description} name=\"description\" onChange={this.handleChange}/>\n                \t\t\t</div>    \n\n\t\t\t\t\t\t\t<button className=\"FormT_button\" onClick={this.handleSubmit}>SUBMIT</button> \n\t\t\t\t\t\t </form>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t </div>\n\t\t)\n\t}\n}\nexport default App;\n","import React, { Component } from 'react';\nimport { Link, Route, NavLink } from 'react-router-dom';\nimport WelcomePage from './WelcomePage';\n\nclass SignUpForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tphone: '',\n\t\t\tpassword: '',\n\t\t\tconpassword: '',\n\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tlet target = e.target;\n\t\tlet value = target.type ===  target.value;\n\t\tlet name = target.name;\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconsole.log('The form was submitted with the following data:');\n\t\tconsole.log(this.state);\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.title = 'PRS log in or sign up';\n\t\tfetch('/users')\n\t\t\t.then(res => res.json())\n\t\t\t.then(users => this.setState({ users }))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"FormCenter\">\n\t\t\t\t{this.componentDidMount()}\n\n\t\t\t\t<div className=\"App-header\"><h1>Place Review System</h1></div>\n\t\t\t\t<div className=\"FormTitle\">\n\t\t\t\t\t<Link to=\"/sign-in\"  className=\"FormTitle__Link\">Sign In </Link>  or\n                    <Link to=\"/sign-up\"  className=\"FormTitle__Link\"> Sign Up</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"PageSwitcher\">\n\t\t\t\t\t<NavLink to=\"/sign-\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign In</NavLink>\n\t\t\t\t\t<NavLink to=\"/sign-up\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign Up</NavLink>\n\t\t\t\t</div>\n\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"FormFields\">\n\n\t\t\t\t\t<div className=\"FormField\">\n\t\t\t\t\t\t<label className=\"FormField__Label\" htmlFor=\"name\">Name</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"FormField\">\n\t\t\t\t\t\t<label className=\"FormField__Label\" htmlFor=\"email\">Email Address</label>\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your Email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"FormField\">\n\t\t\t\t\t\t<label className=\"FormField__Label\" htmlFor=\"phno\">Phone no</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"phoneno\" className=\"FormField__Input\" placeholder=\"Enter your phone no\" name=\"phone\" value={this.state.phone} onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"FormField\">\n\t\t\t\t\t\t<label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"FormField\">\n\t\t\t\t\t\t<label className=\"FormField__Label\" htmlFor=\"conpassword\">Confirm Password</label>\n\t\t\t\t\t\t<input type=\"password\" id=\"conpassword\" className=\"FormField__Input\" placeholder=\"Re-enter your password\" name=\"conpassword\" value={this.state.conpassword} onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"FormField\">\n\t\t\t\t\t\t<Link to=\"/sign-in\"><button onClick={() => { alert('Registered successful')}} className=\"FormField__Button mr-20\">Sign Up</button> </Link>\n\t\t\t\t\t\t<Link to=\"/sign-in\" className=\"FormField__Link\">I'm already member</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Route excat path=\"/welcomePage\" component={WelcomePage} />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SignUpForm;\n","import React, { Component } from 'react';\nimport { Link, Route, NavLink } from 'react-router-dom';\nimport WelcomePage from './WelcomePage';\n\nclass SignInForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    let target = e.target;\n    let value = target.type === 'checkbox' ? target.checked : target.value;\n    let name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log('The form was submitted with the following data:');\n    console.log(this.state);\n  }\n\n  componentDidMount() {\n    document.title = 'PRS log in or sign up';\n  }\n\n \n  render() {\n    return (\n      <div className=\"FormCenter\">\n        {this.componentDidMount()}\n        <div className=\"App-header\"><h1>Place Review System</h1></div>\n\n        <div className=\"FormTitle\">\n\n          <Link to=\"/sign-in\" className=\"FormTitle__Link\">Sign In </Link>  or\n          <Link to=\"/sign-up\" className=\"FormTitle__Link\"> Sign Up</Link>\n        </div>\n        <div className=\"PageSwitcher\">\n          <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign In</NavLink>\n          <NavLink to=\"/sign-up\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign Up</NavLink>\n        </div>\n\n        <form onSubmit={this.handleSubmit} className=\"FormFields\">\n          \n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"email\">Email Address</label>\n            <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your Email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n          </div>\n\n          <div className=\"FormField\">\n            <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n          </div>\n\n          <div className=\"FormField\">\n            <Link to=\"/welcomePage\"><button onClick={() => { alert('Login Successful ') }} className=\"FormField__Button mr-20\">Sign In</button> </Link>\n            <Link to=\"/sign-up\" className=\"FormField__Link\">Create an account</Link>\n          </div>\n         \n          <Route exact path=\"/welcomePage\" component={WelcomePage} />\n        \n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignInForm;\n","import React, { Component } from 'react';\nimport Rater from 'react-rater';\nimport 'react-rater/lib/react-rater.css';\nimport './Rating.css';\n\nclass Rating extends Component {\n        constructor() {\n            super();\n            this.state = { \n                rate1: '',\n                comment: '',\n            \n                listOfComments: [\n                    {\n                        newComment: 'woowwww'\n                    },\n                    {\n                        newComment: 'abcdef'\n                    },\n                    \n                ]\n            };   \n\n            this.handleChange = this.handleChange.bind(this);\n            this.handleSubmit = this.handleSubmit.bind(this);\n        }\n\n        handleChange(e) {\n            \n            this.setState ({\n            [e.target.rate1]: e.target.value\n            });\n        }\n\n        handle(e) {\n            // to get count of stars clicked\n            console.log(e.rating);\n\n        }\n\n        handleSubmit(e) {\n            e.preventDefault();\n           \n            // this.setState(previousState => ({\n            //     newComment: [...previousState.comment, { comment: this.state.comment }]\n            // }))\n        }\n   \n\n\n        render(){\n            const { comment } = this.state;\n            const { description  } = this.props.location.state;\n            console.log(comment);\n       return (  \n            <div className=\"Appp\"> \n                <div className=\"FormFieldA\">\n                    <h1>{this.props.match.params.placeName}</h1> \n                </div>\n            \n                <div className=\"FormFieldTe\">\n                    <p>{description}</p>\n                </div>    \n                \n\n                {/* avg from db */}\n                <div className=\"FormFieldQ\">\n                    <div className=\"FormFieldHead\">\n                        <h3>Average Rating </h3>\n                    </div>\n                    <div className=\"Rater-icon1\">    \n                        <Rater onRate={this.handle} />\n                    </div>\n                </div>\n                        \n\n                \n                <div className=\"FormCenter\">\n                    <form onSubmit={this.handleSubmit} className=\"FormFields\">\n                        \n                        <div className=\"FormF\">\n                            <div className=\"FormFieldHead\">\n                                <h2>Your rating </h2>\n                            </div>\n\n                            {/* https://www.npmjs.com/package/react-rater */}\n\n                            <div className=\"Rater-icon\">    \n                                 <Rater onRate={this.handle} name=\"rate1\" />\n                            </div>\n                        </div>\n                        \n                        <div className=\"FormFieldA\">\n                            <textarea type=\"text\" placeholder = \"Enter your comment\" defaultValue = { Comment } name= \"comment\" onChange={this.handleChange}/>\n                       </div>\n                        \n                        <div className=\"FormFieldA\">\n                            <button onClick={this.handleSubmit} className=\"Form-Button\">SUBMIT</button> \n                        </div>\n                        \n                    </form>\n                 </div>\n            </div>\n     )}\n  }\n  \n  export default Rating;\n  \n\n\n\n","import React from 'react';\n\nconst NotFoundPage = () =>{\n    return(\n        <div>\n            <h1>Page Not Found</h1>\n        </div>\n    )\n}\nexport default NotFoundPage;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Redirect, Route } from 'react-router-dom';\nimport SignUpForm from './pages/SignUpForm';\nimport SignInForm from './pages/SignInForm';\nimport WelcomePage from './pages/WelcomePage';\nimport RatingPage from './pages/RatingPage';\nimport NotFoundPage from './pages/404';\n\nclass App extends Component {\n  render(){\n  return  <Router >\n        <Switch>\n            <Route path='/' exact={true} component={SignInForm} />\n            <Route  exact path=\"/sign-in\" component={SignInForm}></Route>     \n            <Route  exact path=\"/sign-up\" component={SignUpForm}></Route> \n            <Route  exact path=\"/404\" component={NotFoundPage}></Route>\n            <Route  exact path=\"/welcomePage\" component={WelcomePage}></Route>    \n            <Route  path=\"/ratingPage/:placeName\" component={RatingPage}></Route> \n            <Redirect to='/404'></Redirect>\n         </Switch>\n    </Router>\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}